<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mtgz.sc.manager.dao.mapper.SpecificationMapper" >

  <select id="queryObject" resultType="com.mtgz.sc.manager.dao.model.Specification">
    select * from nideshop_specification where id = #{value}
  </select>

  <select id="queryList" resultType="com.mtgz.sc.manager.dao.model.Specification">
    select * from nideshop_specification
    <choose>
      <when test="sidx != null and sidx.trim() != ''">
        order by ${sidx} ${order}
      </when>
      <otherwise>
        order by id desc
      </otherwise>
    </choose>
    <if test="offset != null and limit != null">
      limit #{offset}, #{limit}
    </if>
  </select>

  <select id="queryTotal" resultType="int">
    select count(*) from nideshop_specification
  </select>

  <insert id="save" parameterType="com.mtgz.sc.manager.dao.model.Specification" useGeneratedKeys="true" keyProperty="id">
    insert into nideshop_specification
    (
    `name`,
    `sort_order`
    )
    values
    (
    #{name},
    #{sortOrder}
    )
  </insert>

  <update id="update" parameterType="com.mtgz.sc.manager.dao.model.Specification">
    update nideshop_specification
    <set>
      <if test="name != null">`name` = #{name}, </if>
      <if test="sortOrder != null">`sort_order` = #{sortOrder}</if>
    </set>
    where id = #{id}
  </update>

  <delete id="deleteBatch">
    delete from nideshop_specification where id in
    <foreach item="id" collection="array" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>

  
</mapper>